{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "users",
  "description": "Schema for a user entity",
  "type": "object",
  "primaryKeyFrontEnd": "Id",
  "primaryKey": "id",
  "properties": {
    "id": {
      "type": "integer",
      "description": "Unique identifier for the user",
      "readOnly": true,
      "PK": true,
      "label": "Id"
    },
    "first_name": {
      "type": "string",
      "description": "User's first name",
      "minLength": 5,
      "maxLength": 50,
      "label": "First Name"
    },
    "last_name": {
      "type": "string",
      "description": "User's last name",
      "minLength": 5,
      "maxLength": 50,
      "label": "Last Name"
    },
    "email": {
      "type": "string",
      "description": "User's email",
      "minLength": 5,
      "maxLength": 50,
      "label": "Email"
    },
    "password": {
      "type": "string",
      "description": "User's password",
      "minLength": 5,
      "maxLength": 150,
      "label": "Password"
    },
    "verification_status": {
      "type": "boolean",
      "description": "User's account verification status",
      "label": "Verification status"
    },
    "birth_date": {
      "type": "string",
      "format": "date",
      "description": "User's birth date",
      "label": "Birth Date"
    },
    "verification_code": {
      "type": "string",
      "description": "User's verification code",
      "minLength": 5,
      "maxLength": 50,
      "label": "Verification code"
    },
    "address": {
      "type": "string",
      "description": "User's address",
      "minLength": 5,
      "maxLength": 255,
      "label": "Address"
    },
    "gender": {
      "type": "string",
      "description": "User's gender",
      "enum": ["", "male","female"],
      "label": "Gender"
    },
    "phone": {
      "type": "string",
      "description": "User's phone",
      "minLength": 5,
      "maxLength": 20,
      "label": "Phone"
    },
    "country_code_id": {
      "foreignKey": {
        "table": "country_codes",
        "tablePK": "id",
        "value": "id",
        "column": "code"
      },
      "type": "integer",
      "description": "User's country code id",
      "label": "Country code"
    }
  },
  "filters": ["first_name", "last_name", "email", "id", "birth_date"],
  "required": ["first_name", "last_name", "email", "password", "verification_status", "verification_code", "phone", "country_code_id", "birth_date"],
  "errorMessage": {
    "required": {
        "first_name": "User's first name is required",
        "last_name": "User's last name is required",
        "email": "User's email is required",
        "password": "User's password is required",
        "verification_status": "User's verification status is required",
        "verification_code": "User's verification code is required",
        "phone": "User's phone is required",
        "country_code_id": "User's country code is required",
        "birth_date": "User's birth date is required"
      },
  "properties": {
        "first_name": "User's first name should be between 5 and 50 characters",
        "last_name": "User's last name should be between 5 and 50 characters",
        "email": "User's email should be between 5 and 50 characters",
        "password": "User's password should be at least 5 characters",
        "verification_status": "User's verification status should be true or false",
        "verification_code": "User's verification code should be between 5 and 50 characters",
        "phone": "User's phone should be between 5 and 20 digits",
        "country_code_id": "User's country_code should be valid",
        "address": "User's address must be between 5 and 255 characters",
        "gender": "User's gender must be one of the given values",
        "birth_date": "User's birth date must be date"
      }
  },
  "additionalProperties": true
}